if (not game:IsLoaded()) then
    game.Loaded:Wait();
end

local suc, item: boolean | string = pcall(function() return game:GetService("HttpService"):GetAsync(`https://inventory.roblox.com/v1/users/{game:GetService("Players").LocalPlayer.UserId}/items/2/1293677/is-owned`) end)
if (not suc) then
    do return end;
end
if (item == "false") then
    task.spawn(function()
        while task.wait() do
            if (not game:GetService("Players").LocalPlayer.Character) then
                continue;
            end
            if (not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart) then
                continue;
            end
            local pads: Model = workspace["Secure Parts"]:FindFirstChild("AdminPads");
            if (not pads:FindFirstChild(`{game:GetService("Players").LocalPlayer.Name:sub(1, 1):upper()}{game:GetService("Players").LocalPlayer.Name:sub(2)}'s admin`)) then
                local dren: {Model} = pads:GetChildren();
                local i: number = 1;
                repeat
                    local v: Model = dren[i];
                    i = (i + 1) % 7;
                    if (v == nil) then
                        continue;
                    end
                    if (v:FindFirstChildOfClass("Humanoid") == nil) then
                        dren[i] = nil;
                        continue;
                    end
                    if (v:FindFirstChildOfClass("Humanoid").DisplayName ~= "Touch to get admin") then
                        continue;
                    end
                    if (game:GetService("Players").LocalPlayer.Character == nil) then
                        repeat task.wait() until (game.Players.LocalPlayer.Character ~= nil);
                    end
                    local cf: CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame;
                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v:FindFirstChildOfClass("SpecialMesh").Parent.CFrame;
                    firetouchinterest(v:FindFirstChildOfClass("SpecialMesh").Parent, game:GetService("Players").LocalPlayer.Character.HumanoidRootPart, 0);
                    task.wait();
                    firetouchinterest(v:FindFirstChildOfClass("SpecialMesh").Parent, game:GetService("Players").LocalPlayer.Character.HumanoidRootPart, 1);
                    task.wait();
                until (pads:FindFirstChild(`{game:GetService("Players").LocalPlayer.Name:sub(1, 1):upper()}{game:GetService("Players").LocalPlayer.Name:sub(2)}'s admin`) ~= nil);
            end
        end
    end)
end

local function runCmd(...: string...)
    game.Players:Chat(":" .. table.concat({...}, "|:"));
end

runCmd((":gear me %s 130113146"):format(("0"):rep(10, math.random(10, 400))));

function removeScripts(part: Instance): boolean
    local tool: Tool = game.Players.LocalPlayer.Backpack:WaitForChild("HyperlaserGun", 3);
    if (not tool) then
        return;
    end

    if (not game:GetService("Players").LocalPlayer.Character) then
        return;
    end

    game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(tool);
    tool = game:GetService("Players").LocalPlayer.Character:WaitForChild("HyperlaserGun", 3);
    if (not tool) then
        return false;
    end

    runCmd(":clone me");
    local clone: Model?;
    task.wait();
    for _,v in pairs(workspace:GetDescendants()) do
        if v:IsA("Model") and v:FindFirstAncestorWhichIsA("Humanoid") and v:FindFirstAncestorWhichIsA("Humanoid").DisplayName == game:GetService("Players").LocalPlayer.Character.Humanoid.DisplayName and v ~= game.Players.LocalPlayer.Character and not game.Players:GetPlayerFromCharacter(v) then
            clone = v;
        end
    end
    if (not clone) then
        return false;
    end

    runCmd(`:f3x me,{('\0'):rep(300)}`);

    local tool: Tool = game.Players.LocalPlayer.Backpack.ChildAdded:Wait();
    if (not tool) then
        return false;
    end
    local folder;
    local time: number = os.clock();
    repeat
        for _,v in pairs(tool:GetChildren()) do
            if (v:FindFirstChild("SyncAPI") and v:FindFirstChild("ServerEndpoint")) then
                folder = v;
            end
        end
    until folder or (os.clock() - time > 5);

    local point: RemoteFunction? = folder:FindFirstChild("ServerEndpoint");
    if (not point) then
        return false;
    end

    tool:WaitForChild("ServerControl"):InvokeServer("Click", true, clone.HumanoidRootPart);
    local shot: Part = workspace:WaitForChild("Effect", 2);
    if (shot == nil) then
        return false;
    end
    point:InvokeServer("SyncSurface", {[shot] = {Surfaces = {["Position\0"] = clone.HumanoidRootPart.CFrame.Position}}});
    task.wait();
    point:InvokeServer("SyncSurface", {[clone] = {Surfaces = {["Parent\0"] = part}}});
    task.wait();
    point:InvokeServer("Ungroup", {clone});
end

        -- do whatever u want
